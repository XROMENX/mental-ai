apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
data:
  nginx.conf: |
    worker_processes 1;

    events { worker_connections 1024; }

    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile        on;

      upstream auth_service { server auth-service:8001; }
      upstream assessments_service { server assessments-service:8002; }
      upstream trackers_service { server trackers-service:8003; }
      upstream gamification_service { server gamification-service:8004; }
      upstream journeys_service { server journeys-service:8005; }
      upstream nlp_service { server nlp-service:8006; }

      server {
        listen 8080;

        location /api/auth/ {
          proxy_pass http://auth_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location /api/assessments/ {
          proxy_pass http://assessments_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location /api/trackers/ {
          proxy_pass http://trackers_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location /api/gamification/ {
          proxy_pass http://gamification_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location /api/journeys/ {
          proxy_pass http://journeys_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location /api/nlp/ {
          proxy_pass http://nlp_service/api/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }

        location / {
          root /usr/share/nginx/html;
          index index.html index.htm;
          try_files $uri /index.html;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: nginx:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: config
        configMap:
          name: api-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: LoadBalancer
